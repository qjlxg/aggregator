name: Base64 Conversion

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */8 * * *' # 每 8 小时运行一次

jobs:
  convert_to_base64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # 使用 Python 3.x 的最新稳定版

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyYAML maxminddb # 保留必要的依赖

      - name: Run conversion script
        env: 
          BOT: ${{ secrets.BOT }}
          URL_LIST_REPO_API: ${{ secrets.URL_LIST_REPO_API }}
          CLASH_TEMPLATE_PATH: "clash_template.yml"
          ENABLE_CONNECTIVITY_TEST: "true"
          TCP_TIMEOUT: "1"
          TCP_RETRIES: "1"
          TCP_DELAY: "0.5"
          EXCLUDE_NODES_BY_SERVER: ""
          FAILED_URL_THRESHOLD: "3"
          EXCLUDE_CHINA_NODES: "true"
          GEOIP_DB_PATH: "clash/Country.mmdb"
        run: python subscribe/convert_to_base64.py # 脚本直接运行，输出到控制台

      - name: Upload Generated Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-clash-configs
          path: | # 只上传核心的配置文件
            base64.yaml
            base64.txt
          retention-days: 7

      - name: Commit and push changes (if any)
        if: success() # Only run if previous steps succeed
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Fetch the latest changes from the remote repository
          git fetch origin

          # Rebase the local branch on top of the remote main branch
          git rebase origin/main

          # Add the core configuration files
          git add base64.txt base64.yaml || true # Prevent errors if no changes

          # Check if there are changes to commit
          if ! git diff --cached --exit-code --quiet; then
            # Commit the changes
            git commit -m "feat: 更新生成的 Clash 配置 (base64.yaml, base64.txt)"

            # Push the changes to the main branch
            git push origin main
          else
            echo "未检测到 base64.txt 或 base64.yaml 更改，跳过提交。"
          fi
