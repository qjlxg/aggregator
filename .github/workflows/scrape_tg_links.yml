name: Telegram URL Scraper

on:
  workflow_dispatch: # Manuelle Auslösung
  schedule:
    - cron: '0 0 * * 0' # Jeden Sonntag um Mitternacht UTC

jobs:
  scrape-urls:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Wählen Sie eine passende Python-Version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon aiohttp

      # Schritt zum Erstellen der Session-Datei aus einem Secret (OPTIONAL, aber empfohlen für Actions)
      # Wenn Sie TELEGRAM_SESSION_STRING verwenden, ist dieser Schritt nicht notwendig,
      # aber die Umgebungsvariable TELEGRAM_SESSION_STRING muss gesetzt sein.
      # - name: Restore Telethon Session (if using session file)
      #   if: secrets.TELEGRAM_SESSION_FILE_BASE64 != ''
      #   run: |
      #     echo "${{ secrets.TELEGRAM_SESSION_FILE_BASE64 }}" | base64 --decode > ${{ env.SESSION_NAME }}.session
      #   env:
      #     SESSION_NAME: "default_session" # Muss mit SESSION_NAME im Python-Skript übereinstimmen

      - name: Run scraper
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }} # Wenn Sie Session-Strings verwenden
          # PYTHONIOENCODING: "utf-8" # Sicherstellen der UTF-8-Ausgabe
        run: python scrape_tg_links.py

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: valid-telegram-urls
          path: data/t.txt
          if-no-files-found: error # Fehler, wenn die Datei nicht erstellt wurde

      # Optional: Commit der Ergebnisse zurück ins Repository
      # - name: Commit and push if changed
      #   run: |
      #     git config --global user.name 'github-actions[bot]'
      #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      #     git add data/t.txt
      #     # Prüfen, ob es Änderungen gibt, um einen leeren Commit zu vermeiden
      #     git diff --staged --quiet || git commit -m "Automated URL update from Telegram channel"
      #     git push
      #   # Stellen Sie sicher, dass der Workflow Berechtigungen zum Pushen hat,
      #   # z.B. durch Hinzufügen von `permissions: contents: write` auf Job- oder Workflow-Ebene.
